// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MyMood.Web.Controllers
{
    public partial class AppController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AppController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Install()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Install);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Manifest()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Manifest);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SyncData()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SyncData);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SubmitMoodResponse()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitMoodResponse);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RequestGlobalReportInfo()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestGlobalReportInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RequestGlobalReportData()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestGlobalReportData);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RequestPersonalMoodReport()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestPersonalMoodReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RegisterForAPNS()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RegisterForAPNS);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RegisterInterestInApp()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RegisterInterestInApp);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AppController Actions { get { return MVC.App; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "App";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "App";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Install = "Install";
            public readonly string Manifest = "Manifest";
            public readonly string Index = "Index";
            public readonly string SyncData = "SyncData";
            public readonly string SubmitMoodResponse = "SubmitMoodResponse";
            public readonly string RequestGlobalReportInfo = "RequestGlobalReportInfo";
            public readonly string RequestGlobalReportData = "RequestGlobalReportData";
            public readonly string RequestPersonalMoodReport = "RequestPersonalMoodReport";
            public readonly string RegisterForAPNS = "RegisterForAPNS";
            public readonly string RegisterInterestInApp = "RegisterInterestInApp";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Install = "Install";
            public const string Manifest = "Manifest";
            public const string Index = "Index";
            public const string SyncData = "SyncData";
            public const string SubmitMoodResponse = "SubmitMoodResponse";
            public const string RequestGlobalReportInfo = "RequestGlobalReportInfo";
            public const string RequestGlobalReportData = "RequestGlobalReportData";
            public const string RequestPersonalMoodReport = "RequestPersonalMoodReport";
            public const string RegisterForAPNS = "RegisterForAPNS";
            public const string RegisterInterestInApp = "RegisterInterestInApp";
        }


        static readonly ActionParamsClass_Install s_params_Install = new ActionParamsClass_Install();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Install InstallParams { get { return s_params_Install; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Install
        {
            public readonly string EventName = "EventName";
        }
        static readonly ActionParamsClass_Manifest s_params_Manifest = new ActionParamsClass_Manifest();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Manifest ManifestParams { get { return s_params_Manifest; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Manifest
        {
            public readonly string EventName = "EventName";
        }
        static readonly ActionParamsClass_SyncData s_params_SyncData = new ActionParamsClass_SyncData();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SyncData SyncDataParams { get { return s_params_SyncData; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SyncData
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_SubmitMoodResponse s_params_SubmitMoodResponse = new ActionParamsClass_SubmitMoodResponse();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubmitMoodResponse SubmitMoodResponseParams { get { return s_params_SubmitMoodResponse; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubmitMoodResponse
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RequestGlobalReportInfo s_params_RequestGlobalReportInfo = new ActionParamsClass_RequestGlobalReportInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RequestGlobalReportInfo RequestGlobalReportInfoParams { get { return s_params_RequestGlobalReportInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RequestGlobalReportInfo
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RequestGlobalReportData s_params_RequestGlobalReportData = new ActionParamsClass_RequestGlobalReportData();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RequestGlobalReportData RequestGlobalReportDataParams { get { return s_params_RequestGlobalReportData; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RequestGlobalReportData
        {
            public readonly string EventName = "EventName";
            public readonly string requestModel = "requestModel";
        }
        static readonly ActionParamsClass_RequestPersonalMoodReport s_params_RequestPersonalMoodReport = new ActionParamsClass_RequestPersonalMoodReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RequestPersonalMoodReport RequestPersonalMoodReportParams { get { return s_params_RequestPersonalMoodReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RequestPersonalMoodReport
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RegisterForAPNS s_params_RegisterForAPNS = new ActionParamsClass_RegisterForAPNS();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RegisterForAPNS RegisterForAPNSParams { get { return s_params_RegisterForAPNS; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RegisterForAPNS
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RegisterInterestInApp s_params_RegisterInterestInApp = new ActionParamsClass_RegisterInterestInApp();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RegisterInterestInApp RegisterInterestInAppParams { get { return s_params_RegisterInterestInApp; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RegisterInterestInApp
        {
            public readonly string EventName = "EventName";
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Install = "Install";
                public readonly string Manifest = "Manifest";
            }
            public readonly string Install = "~/Views/App/Install.cshtml";
            public readonly string Manifest = "~/Views/App/Manifest.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AppController : MyMood.Web.Controllers.AppController
    {
        public T4MVC_AppController() : base(Dummy.Instance) { }

        partial void InstallOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string EventName);

        public override System.Web.Mvc.ActionResult Install(string EventName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Install);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            InstallOverride(callInfo, EventName);
            return callInfo;
        }

        partial void ManifestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string EventName);

        public override System.Web.Mvc.ActionResult Manifest(string EventName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Manifest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ManifestOverride(callInfo, EventName);
            return callInfo;
        }

        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        partial void SyncDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.UpdateServiceFromAppModel model);

        public override System.Web.Mvc.JsonResult SyncData(string EventName, MyMood.Web.Models.UpdateServiceFromAppModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SyncData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SyncDataOverride(callInfo, EventName, model);
            return callInfo;
        }

        partial void SubmitMoodResponseOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.SubmitResponseModel model);

        public override System.Web.Mvc.JsonResult SubmitMoodResponse(string EventName, MyMood.Web.Models.SubmitResponseModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitMoodResponse);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubmitMoodResponseOverride(callInfo, EventName, model);
            return callInfo;
        }

        partial void RequestGlobalReportInfoOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.RequestGlobalReportInfoModel model);

        public override System.Web.Mvc.JsonResult RequestGlobalReportInfo(string EventName, MyMood.Web.Models.RequestGlobalReportInfoModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestGlobalReportInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RequestGlobalReportInfoOverride(callInfo, EventName, model);
            return callInfo;
        }

        partial void RequestGlobalReportDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.GlobalMoodReportDataRequestModel requestModel);

        public override System.Web.Mvc.JsonResult RequestGlobalReportData(string EventName, MyMood.Web.Models.GlobalMoodReportDataRequestModel requestModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestGlobalReportData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestModel", requestModel);
            RequestGlobalReportDataOverride(callInfo, EventName, requestModel);
            return callInfo;
        }

        partial void RequestPersonalMoodReportOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.RequestPersonalMoodReportModel model);

        public override System.Web.Mvc.JsonResult RequestPersonalMoodReport(string EventName, MyMood.Web.Models.RequestPersonalMoodReportModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RequestPersonalMoodReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RequestPersonalMoodReportOverride(callInfo, EventName, model);
            return callInfo;
        }

        partial void RegisterForAPNSOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.AppRequestModelBase model);

        public override System.Web.Mvc.JsonResult RegisterForAPNS(string EventName, MyMood.Web.Models.AppRequestModelBase model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RegisterForAPNS);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RegisterForAPNSOverride(callInfo, EventName, model);
            return callInfo;
        }

        partial void RegisterInterestInAppOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EventName, MyMood.Web.Models.RegisterInterestInAppModel model);

        public override System.Web.Mvc.JsonResult RegisterInterestInApp(string EventName, MyMood.Web.Models.RegisterInterestInAppModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RegisterInterestInApp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventName", EventName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RegisterInterestInAppOverride(callInfo, EventName, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
