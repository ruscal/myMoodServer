@model MyMood.Web.Models.EditEventModel

@using (Html.BeginRouteForm("Events", new { action = MVC.Event.ActionNames.Save }))
{
    @Html.ValidationSummary(true)
    
    @Html.HiddenFor(m => m.Id)

    <div>
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name)
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div>
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title)
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.CurrentVersion)
        @Html.TextBoxFor(m => m.ApplicationConfig.CurrentVersion)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.CurrentVersion)
    </div>
        
    <div>
        @Html.LabelFor(m => m.StartDate)
        @Html.EditorFor(m => m.StartDate)
        @Html.ValidationMessageFor(m => m.StartDate)
    </div>
    <div>
        @Html.LabelFor(m => m.EndDate)
        @Html.EditorFor(m => m.EndDate)
        @Html.ValidationMessageFor(m => m.EndDate)
    </div>
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.AppPassCode)
        @Html.TextBoxFor(m => m.ApplicationConfig.AppPassCode)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.AppPassCode)
    </div>

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.ReportPassCode)
        @Html.TextBoxFor(m => m.ApplicationConfig.ReportPassCode)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.ReportPassCode)
    </div>   
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.WebServiceUri)
        @Html.TextBoxFor(m => m.ApplicationConfig.WebServiceUri)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.WebServiceUri)
    </div>   
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.LanServiceUri)
        @Html.TextBoxFor(m => m.ApplicationConfig.LanServiceUri)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.LanServiceUri)
    </div>

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.SyncDataInterval)
        @Html.TextBoxFor(m => m.ApplicationConfig.SyncDataInterval)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.SyncDataInterval)
    </div>     
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.SyncReportInterval)
        @Html.TextBoxFor(m => m.ApplicationConfig.SyncReportInterval)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.SyncReportInterval)
    </div>     

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.WarnSyncFailureAfterMins)
        @Html.TextBoxFor(m => m.ApplicationConfig.WarnSyncFailureAfterMins)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.WarnSyncFailureAfterMins)
    </div>     

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.ForceUpdate)
        @Html.CheckBoxFor(m => m.ApplicationConfig.ForceUpdate)
    </div>    

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.UpdateAppUri)
        @Html.TextBoxFor(m => m.ApplicationConfig.UpdateAppUri)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.UpdateAppUri)
    </div>            
        
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.ReportMoodIsStaleMins)
        @Html.TextBoxFor(m => m.ApplicationConfig.ReportMoodIsStaleMins)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.ReportMoodIsStaleMins)
    </div>        

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.ReportSplineTension)
        @Html.TextBoxFor(m => m.ApplicationConfig.ReportSplineTension)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.ReportSplineTension)
    </div>        
            
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.TimeZone)
        @Html.DropDownListFor(m => m.ApplicationConfig.TimeZone, Model.AvailableTimeZones)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.TimeZone)
    </div>

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.SyncMode)
        @Html.DropDownListFor(m => m.ApplicationConfig.SyncMode, Model.AvailableSyncModes)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.SyncMode)
    </div>

    <div>
        @Html.LabelFor(m => m.ApplicationConfig.HasGoLiveDate)
        @Html.CheckBoxFor(m => m.ApplicationConfig.HasGoLiveDate)
    </div>      
    
    <div>
        @Html.LabelFor(m => m.ApplicationConfig.GoLiveDate)
        @Html.EditorFor(m => m.ApplicationConfig.GoLiveDate)
        @Html.ValidationMessageFor(m => m.ApplicationConfig.GoLiveDate)
    </div>  
        
}

@if (false)
{
    <script src="~/Scripts/jquery-vsdoc.js" type="text/javascript"></script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $checkbox = $('#ApplicationConfig_HasGoLiveDate');
        $checkbox.change(function () { ToggleDateVisibility($checkbox); });
        ToggleDateVisibility($checkbox);
    });

    function ToggleDateVisibility($cb) {
        $cb.parent().next().toggleClass("hidden", $cb.is(":not(:checked)"));
    }

</script>
